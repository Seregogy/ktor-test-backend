openapi: 3.0.0
info:
  title: Music API
  description: A sample API for demonstration purposes.
  version: 1.0.0
servers:
  - url: http://api.example.com/v1
    description: Production server
  - url: http://192.168.1.64:8080/api/v1/
    description: Development server
paths:
  /tracks/random:
    get:
      summary: Get all users
      description: Retrieves a list of all registered users.
      responses:
        '200':
          description: A list of users.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      description: Creates a new user in the system.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser'
      responses:
        '201':
          description: User created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid input.
  /users/{userId}:
    get:
      summary: Get user by ID
      description: Retrieves a single user by their ID.
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
            format: int64
          description: The ID of the user to retrieve.
      responses:
        '200':
          description: A single user object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found.
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 123
        name:
          type: string
          example: John Doe
        email:
          type: string
          format: email
          example: john.doe@example.com
    NewUser:
      type: object
      properties:
        name:
          type: string
          example: Jane Doe
        email:
          type: string
          format: email
          example: jane.doe@example.com
      required:
        - name
        - email