openapi: 3.0.0
info:
  title: Music service API
  description: Полная документация
  version: 1.0.0

servers:
  - url: https://onewave.duckdns.org
    description: Production server
  - url: http://127.0.0.1:8080
    description: Development server

paths:
  /api/v1/tracks/random:
    get:
      summary: Редирект на tracks/{id} с рандомным id
      responses:
        '302':
          description: Редирект на /api/v1/tracks/{id}
        '200':
          description: Полная информация о треке
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullTrack'
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Описание ошибки

  /api/v1/tracks/{id}:
    get:
      summary: Возвращает полную информацию о треке
      parameters:
        - in: path
          name: id
          description: Id, запрашиваемого трека
          required: true
          schema:
            type: string
            format: UUID
            example: 9703c54c-a360-4266-8e8a-2c0977c4c592
      responses:
        '200':
          description: Полная информация о треке
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullTrack'
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Описание ошибки
        '404':
          description: Ошибка в запросе
        default:
          description: Непредвиденная ошибка
  
  /api/v1/artists/top:
    get:
      summary: Возвращает топ артистов по количеству прослушиваний
      parameters:
        - in: query
          name: limit
          description: Количество возвращаемых артистов (по умолчанию 5)
          schema:
            type: integer
            example: 5
      responses:
        '200':
          description: Список топ артистов
          content:
            application/json:
              schema:
                type: object
                properties:
                  artists:
                    type: array
                    items:
                      $ref: '#/components/schemas/Artist'

  /api/v1/artists/{id}:
    get:
      summary: Возвращает полную информацию об артисте
      parameters:
        - in: path
          name: id
          description: ID артиста
          required: true
          schema:
            type: string
            format: UUID
            example: ab29457d-0ccf-4b12-aa22-40827e1ff6c7
      responses:
        '200':
          description: Полная информация об артисте
          content:
            application/json:
              schema:
                type: object
                properties:
                  artist:
                    $ref: '#/components/schemas/FullArtist'
        '400':
          description: Некорректный ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "id not stated"
        '404':
          description: Артист не найден
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "invalid id"

  /api/v1/artists/{id}/tracks/top:
    get:
      summary: Возвращает топ треков артиста по прослушиваниям
      parameters:
        - in: path
          name: id
          description: ID артиста
          required: true
          schema:
            type: string
            format: UUID
            example: ab29457d-0ccf-4b12-aa22-40827e1ff6c7
        - in: query
          name: limit
          description: Количество возвращаемых треков (по умолчанию 9)
          schema:
            type: integer
            example: 9
      responses:
        '200':
          description: Топ треков артиста
          content:
            application/json:
              schema:
                type: object
                properties:
                  tracks:
                    type: array
                    items:
                      $ref: '#/components/schemas/Track'
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "not stated"
        '404':
          description: Артист не найден
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "invalid"

  /api/v1/artists/{id}/albums:
    get:
      summary: Возвращает все альбомы артиста (исключая синглы)
      parameters:
        - in: path
          name: id
          description: ID артиста
          required: true
          schema:
            type: string
            format: UUID
            example: ab29457d-0ccf-4b12-aa22-40827e1ff6c7
      responses:
        '200':
          description: Список альбомов артиста
          content:
            application/json:
              schema:
                type: object
                properties:
                  albums:
                    type: array
                    items:
                      $ref: '#/components/schemas/Album'
        '400':
          description: Некорректный ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "id not stated or invalid"

  /api/v1/artists/{id}/singles:
    get:
      summary: Возвращает синглы артиста
      parameters:
        - in: path
          name: id
          description: ID артиста
          required: true
          schema:
            type: string
            format: UUID
            example: ab29457d-0ccf-4b12-aa22-40827e1ff6c7
      responses:
        '200':
          description: Список синглов артиста
          content:
            application/json:
              schema:
                type: object
                properties:
                  singles:
                    type: array
                    items:
                      $ref: '#/components/schemas/Album'
        '400':
          description: Некорректный ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "id not stated or invalid"

  /api/v1/artists/{id}/releases:
    get:
      summary: Возвращает все релизы артиста (альбомы и синглы)
      parameters:
        - in: path
          name: id
          description: ID артиста
          required: true
          schema:
            type: string
            format: UUID
            example: ab29457d-0ccf-4b12-aa22-40827e1ff6c7
      responses:
        '200':
          description: Список всех релизов артиста
          content:
            application/json:
              schema:
                type: object
                properties:
                  releases:
                    type: array
                    items:
                      $ref: '#/components/schemas/Album'
        '400':
          description: Некорректный ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "id not stated or invalid"

  /api/v1/artists/{id}/albums/latest:
    get:
      summary: Возвращает последний релиз артиста
      parameters:
        - in: path
          name: id
          description: ID артиста
          required: true
          schema:
            type: string
            format: UUID
            example: ab29457d-0ccf-4b12-aa22-40827e1ff6c7
      responses:
        '200':
          description: Последний релиз артиста и дата выпуска
          content:
            application/json:
              schema:
                type: object
                properties:
                  lastAlbum:
                    $ref: '#/components/schemas/Album'
                  releaseDate:
                    type: integer
                    format: UNIX timestamp
                    description: Дата выпуска в формате UNIX timestamp
                    example: 1672531200
        '400':
          description: Некорректный ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "id not stated or invalid"
        '404':
          description: Релизы не найдены
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "item not found"
  
  /api/v1/albums/{id}:
    get:
      summary: Возвращает полную информацию об альбоме
      parameters:
        - in: path
          name: id
          description: ID альбома
          required: true
          schema:
            type: string
            format: UUID
            example: 350cd1a4-6bc6-45fd-8516-ce852b2ebb2f
      responses:
        '200':
          description: Полная информация об альбоме
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullAlbum'
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "not stated"

  /api/v1/albums/{id}/tracks:
    get:
      summary: Возвращает все треки альбома
      parameters:
        - in: path
          name: id
          description: ID альбома
          required: true
          schema:
            type: string
            format: UUID
            example: 350cd1a4-6bc6-45fd-8516-ce852b2ebb2f
      responses:
        '200':
          description: Список треков альбома
          content:
            application/json:
              schema:
                type: object
                properties:
                  tracks:
                    type: array
                    items:
                      $ref: '#/components/schemas/Track'
        '400':
          description: Некорректный ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "id not stated"

  /api/v1/albums/{id}/share:
    get:
      summary: Редирект для шаринга альбома
      parameters:
        - in: path
          name: id
          description: ID альбома
          required: true
          schema:
            type: string
            example: 350cd1a4-6bc6-45fd-8516-ce852b2ebb2f
      responses:
        '302':
          description: Редирект на musicapp:// схему
        '400':
          description: ID не указан
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "id not stated"

  /api/v1/tracks:
    post:
      summary: Возвращает информацию о нескольких треках по их ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tracks:
                  type: array
                  items:
                    type: string
                    format: UUID
                    example: 9703c54c-a360-4266-8e8a-2c0977c4c592
      responses:
        '200':
          description: Список треков
          content:
            application/json:
              schema:
                type: object
                properties:
                  tracks:
                    type: array
                    items:
                      $ref: '#/components/schemas/FullTrack'
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "invalid request"

  /api/v1/tracks/{id}/album:
    get:
      summary: Редирект на альбом, содержащий трек
      parameters:
        - in: path
          name: id
          description: ID трека
          required: true
          schema:
            type: string
            format: UUID
            example: 9703c54c-a360-4266-8e8a-2c0977c4c592
      responses:
        '302':
          description: Редирект на /api/v1/albums/{albumId}
        '400':
          description: Некорректный ID трека
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "id not stated or invalid"
        '404':
          description: Трек или альбом не найден
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "album id not found or track id is invalid"

  /api/v1/tracks/{trackId}/like:
    post:
      summary: Добавляет/удаляет трек в избранное (требует аутентификации)
      security:
        - auth-jwt: []
      parameters:
        - in: path
          name: trackId
          description: ID трека
          required: true
          schema:
            type: string
            format: UUID
            example: 9703c54c-a360-4266-8e8a-2c0977c4c592
      responses:
        '200':
          description: Статус лайка после операции
          content:
            application/json:
              schema:
                type: object
                properties:
                  trackId:
                    type: string
                    format: UUID
                  liked:
                    type: boolean
        '400':
          description: ID не указан
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "id not stated"
        '403':
          description: Невалидный access token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "access token payload invalid"
        '404':
          description: Трек или пользователь не найден
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "invalid id"

  /api/v1/tracks/random/id:
        get:
          summary: Возвращает случайный ID трека
          responses:
            '200':
              description: Случайный ID трека
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      id:
                        type: string
                        format: UUID

  /api/v1/auth/register:
    post:
      summary: Регистрация нового пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Имя пользователя (1-32 символа)
                  example: "John Doe"
                email:
                  type: string
                  format: email
                  description: Email пользователя
                  example: "user@example.com"
                password:
                  type: string
                  description: Пароль (минимум 8 символов)
                  example: "securepassword123"
      responses:
        '201':
          description: Пользователь успешно зарегистрирован
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: UUID
                    description: ID пользователя
                  name:
                    type: string
                    description: Имя пользователя
                  accessToken:
                    type: string
                    description: Access token (действует 30 дней)
                  refreshToken:
                    type: string
                    description: Refresh token (бессрочный)
        '400':
          description: Некорректные данные запроса
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: "name is to short or to long"
                  email:
                    type: string
                    example: "invalid email"
                  password:
                    type: string
                    example: "password is to short"
        '409':
          description: Пользователь с таким email уже существует
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "user with same email already exists"

  /api/v1/auth/refresh-token:
    post:
      summary: Обновление access token с помощью refresh token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
                  description: Refresh token
                  example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
      responses:
        '200':
          description: Токены успешно обновлены
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    description: Новый access token (действует 30 дней)
                  refreshToken:
                    type: string
                    description: Новый refresh token (бессрочный)
        '403':
          description: Невалидный refresh token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "invalid token"

components:
  securitySchemes:
    auth-jwt:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Album:
      type: object
      description: Минимальные данные о альбоме
      properties:
        id:
          type: string
          format: UUID
          example: 350cd1a4-6bc6-45fd-8516-ce852b2ebb2f
        name:
          type: string
          description: Название альбома
          example: Blurryface
        imageUrl:
          type: string
          description: Ссылка на обложку альбома 
          example: https://st-petersburg.pult.ru/upload/iblock/fd6/fd683b62ed553b24285ecf1d1c47e8a0.jpg
        artists:
          type: array
          items:
            $ref: '#/components/schemas/Artist'
      required:
        - id
        - name
        - imageUrl

    FullAlbum:
      type: object
      description: Полные данные о альбому
      properties:
        id:
          type: string
          format: UUID
          example: 350cd1a4-6bc6-45fd-8516-ce852b2ebb2f
        name:
          type: string
          description: Название альбома
          example: Blurryface
        imageUrl:
          type: string
          description: Ссылка на обложку альбома 
          example: https://st-petersburg.pult.ru/upload/iblock/fd6/fd683b62ed553b24285ecf1d1c47e8a0.jpg
        artists:
          type: array
          items:
            $ref: '#/components/schemas/Artist'
        likes:
          type: string
          description: Количество лайков альбому за всё время
        listening: 
          type: string
          description: Количество стримов альбома за всё время
        releaseDate:
          type: number
          format: UNIX timestamp
        label:
          type: string
        tracks:
          type: array
          items:
            $ref: '#/components/schemas/Track'
      required:
        - id
        - name
        - imageUrl
    
    Track:
      type: object
      description: Минимальные данные о треке
      properties:
        id:
          type: string
          format: UUID
          example: 9703c54c-a360-4266-8e8a-2c0977c4c592
        name:
          type: string
          description: Название трека
          example: Stressed Out
        imageUrl:
          type: string
          description: Ссылка на обложку альбома, содержащего данный трек
          example: https://st-petersburg.pult.ru/upload/iblock/fd6/fd683b62ed553b24285ecf1d1c47e8a0.jpg
        indexInAlbum:
          type: integer
      required:
        - id
        - name
        - imageUrl
        - indexInAlbum

    FullTrack:
      type: object
      description: Полные данные о треке
      properties:
        id:
          type: string
          format: UUID
          example: 9703c54c-a360-4266-8e8a-2c0977c4c592
        name:
          type: string
          description: Название трека
          example: Stressed Out
        imageUrl:
          type: string
          description: Ссылка на обложку альбома, содержащего данный трек
          example: https://st-petersburg.pult.ru/upload/iblock/fd6/fd683b62ed553b24285ecf1d1c47e8a0.jpg
        indexInAlbum:
          type: integer
        durationSeconds:
          type: number
          format: Long
          description: Длительность трека в мс.
        lyrics:
          type: string
          description: В будущем будет переделано в объект, содержащий обычный текст и текст с таймкодами
        isExplicit:
          type: boolean
          description: Имеет ли трек ограничение 18+
        audioUrl:
          type: string
          description: Прямая ссылка на статический аудио ресурс для загрузки и стриминга
          example: http://95.31.212.185:7777/audio/9703c54c-a360-4266-8e8a-2c0977c4c592.mp3
        album:
          type: object
          $ref: '#/components/schemas/Album'
      required:
        - id
        - name
        - imageUrl
        - indexInAlbum

    Artist:
      type: object
      properties:
        id:
          type: string
          format: UUID
          example: ab29457d-0ccf-4b12-aa22-40827e1ff6c7
        name:
          type: string
          description: Имя автора/группы
          example: Twenty One Pilots
        about:
          type: string
          description: Краткая информация об артисте
        imageUrl:
          type: string
          format: url
          description: Первая ссылка на аватарку
          example: https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcSLRimoO0Q7LtM3t--wcBAu2JxbWsLwzT-_YpU4I2E0dwWxT8kjYRnKmnixh45BJE1_GGmHlyjL-H7VynzS9Ukf8A
      required:
        - id
        - name
        - imageUrl

    FullArtist:
      type: object
      properties:
        id:
          type: string
          format: UUID
          example: ab29457d-0ccf-4b12-aa22-40827e1ff6c7
        name:
          type: string
          description: Имя автора/группы
          example: Twenty One Pilots
        about:
          type: string
          description: Краткая информация об артисте
        listeningInMonth:
          type: integer
          description: Количество стримов данного артиста за месяц
          example: 3923
        likes:
          type: integer
          description: Количество добавлений в избранные артисты за всё время
          example: 5023
        images:
          type: array
          description: Ссылки на все аватарки
          items:
            type: string
        socialMedias:
          type: array
          items:
            $ref: '#/components/schemas/SocialMedia'
      required:
        - id
        - name
        - listeningInMonth
        - likes
        - images

    SocialMedia:

      type: object
      properties:
        name:
          type: string
          description: Название соц. сети
          example: YouTube
        link:
          type: string
          format: url
          example: https://youtube.com/
